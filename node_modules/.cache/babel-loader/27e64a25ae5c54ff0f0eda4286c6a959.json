{"ast":null,"code":"class EmailWindow extends React.PureComponent {\n  constructor(props) {\n    super(props); // STEP 1: create a container <div>\n\n    this.containerEl = document.createElement(\"div\");\n    this.externalWindow = null;\n  }\n\n  render() {\n    // STEP 2: append props.children to the container <div> that isn't mounted anywhere yet\n    return ReactDOM.createPortal(this.props.children, this.containerEl);\n  }\n\n  componentDidMount() {\n    // STEP 3: open a new browser window and store a reference to it\n    this.externalWindow = window.open(\"\", \"\", \"width=600,height=400,left=200,top=200\"); // STEP 4: append the container <div> (that has props.children appended to it) to the body of the new window\n\n    this.externalWindow.document.body.appendChild(this.containerEl);\n  }\n\n  componentWillUnmount() {\n    // STEP 5: This will fire when this.state.showWindowPortal in the parent component becomes false\n    // So we tidy up by closing the window\n    this.externalWindow.close();\n  }\n\n}","map":{"version":3,"sources":["/Users/seanrobnett/Desktop/my-projects/email-archives/src/Component/EmailWindow.jsx"],"names":["EmailWindow","React","PureComponent","constructor","props","containerEl","document","createElement","externalWindow","render","ReactDOM","createPortal","children","componentDidMount","window","open","body","appendChild","componentWillUnmount","close"],"mappings":"AAAA,MAAMA,WAAN,SAA0BC,KAAK,CAACC,aAAhC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,WAAL,GAAmBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,WAAOC,QAAQ,CAACC,YAAT,CAAsB,KAAKP,KAAL,CAAWQ,QAAjC,EAA2C,KAAKP,WAAhD,CAAP;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKL,cAAL,GAAsBM,MAAM,CAACC,IAAP,CACpB,EADoB,EAEpB,EAFoB,EAGpB,uCAHoB,CAAtB,CAFkB,CAQlB;;AACA,SAAKP,cAAL,CAAoBF,QAApB,CAA6BU,IAA7B,CAAkCC,WAAlC,CAA8C,KAAKZ,WAAnD;AACD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB;AACA;AACA,SAAKV,cAAL,CAAoBW,KAApB;AACD;;AA7B2C","sourcesContent":["class EmailWindow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    // STEP 1: create a container <div>\n    this.containerEl = document.createElement(\"div\");\n    this.externalWindow = null;\n  }\n\n  render() {\n    // STEP 2: append props.children to the container <div> that isn't mounted anywhere yet\n    return ReactDOM.createPortal(this.props.children, this.containerEl);\n  }\n\n  componentDidMount() {\n    // STEP 3: open a new browser window and store a reference to it\n    this.externalWindow = window.open(\n      \"\",\n      \"\",\n      \"width=600,height=400,left=200,top=200\"\n    );\n\n    // STEP 4: append the container <div> (that has props.children appended to it) to the body of the new window\n    this.externalWindow.document.body.appendChild(this.containerEl);\n  }\n\n  componentWillUnmount() {\n    // STEP 5: This will fire when this.state.showWindowPortal in the parent component becomes false\n    // So we tidy up by closing the window\n    this.externalWindow.close();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}